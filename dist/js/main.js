/**
 * Bundle of AWEMA task
 * Generated: 2021-01-13 15:15:43
 * Version: 1.0.0
 */

!function(){"use strict";var t={example_data:"example-data-from-config"},e={props:{example_data:{type:String,default(){return this._config.example_data}}},inject:{},computed:{exampleFromFunction:()=>"example-function"},beforeCreate(){this._config=Object.assign(t,AWEMA.utils.object.get(AWEMA_CONFIG,"task",{}))}};let s=0;var a=function(t,e,s,a,n,i,r,o,l,d){"boolean"!=typeof r&&(l=o,o=r,r=!1);var u,c="function"==typeof s?s.options:s;if(t&&t.render&&(c.render=t.render,c.staticRenderFns=t.staticRenderFns,c._compiled=!0,n&&(c.functional=!0)),a&&(c._scopeId=a),i?(u=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),e&&e.call(this,l(t)),t&&t._registeredComponents&&t._registeredComponents.add(i)},c._ssrRegister=u):e&&(u=r?function(){e.call(this,d(this.$root.$options.shadowRoot))}:function(t){e.call(this,o(t))}),u)if(c.functional){var _=c.render;c.render=function(t,e){return u.call(e),_(t,e)}}else{var p=c.beforeCreate;c.beforeCreate=p?[].concat(p,u):[u]}return s}({render:function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",[s("content-wrapper",{attrs:{"store-data":"taskStatuses"},scopedSlots:t._u([{key:"default",fn:function(e){return[s("div",{staticClass:"mb-10"},[s("div",{staticClass:"grid"},[s("div",{staticClass:"cell-1-1 cell--dsm"},[s("table-builder",{attrs:{default:e.data}},[s("tb-column",{attrs:{name:"name",label:t.$lang.PROCESSES},scopedSlots:t._u([{key:"default",fn:function(e){return[s("div",[s("span",{staticClass:"cl-caption"},[t._v(t._s(t.$lang.STATUS)+":")]),t._v(" "),s("span",{staticClass:"badge",class:{badge_grass:"finished"===e.data.status,badge_sky:"executing"===e.data.status,badge_warn:"failed"===e.data.status}},[t._v("\n                                                "+t._s(e.data.status_trans)+"\n                                            ")])]),t._v(" "),s("div",{staticClass:"mt-2"},[s("small",[t._v(t._s(e.data.type_trans))])])]}}],null,!0)}),t._v(" "),s("tb-column",{attrs:{name:"manage",label:" "},scopedSlots:t._u([{key:"default",fn:function(e){return[s("context-menu",{attrs:{right:""}},[s("button",{staticClass:"btn",attrs:{slot:"toggler",type:"submit"},slot:"toggler"},[t._v("\n                                                "+t._s(t.$lang.OPTIONS)+"\n                                            ")])])]}}],null,!0)})],1)],1)])])]}}])},[t._v(" "),s("div",{attrs:{slot:"empty"},slot:"empty"})])],1)},staticRenderFns:[]},void 0,{name:"status",mixins:[e],props:{name:{type:String,default:()=>`status-${s++}`},default:Object,statusTypes:Object,refreshStatuses:{type:Boolean,default:!0},refreshInterval:{type:Number,default:2e3},storeData:String,types:{type:Array,required:!0},url:{type:String,required:!0}},computed:{status(){return this.$store.state.task[this.name]},isLoading(){return this.status&&this.status.isLoading}},created(){this.$store.commit("task/create",{name:this.name})},mounted(){this.loadStatuses(),this.refreshStatuses&&this.loopRefreshStatuses()},methods:{loadStatuses(){this.$store.dispatch("task/loadStatuses",{name:this.name,types:this.types,url:this.url})},loopRefreshStatuses(){setInterval(()=>{this.isLoading||this.loadStatuses()},this.refreshInterval)}},beforeDestroy(){}},void 0,!1,void 0,void 0,void 0);var n={installed:!1,install:function(t){this.installed||(this.installed=!0,t.component("task-status",a))}},i={PROCESSES:"Processes",LOADING:"Loading...",STATUS:"Status",OPTIONS:"Options"};var r={state:()=>({}),getters:{task:t=>e=>t[e],isLoading:(t,e)=>t=>{const s=e.task(t);return s&&s.isLoading},url:(t,e)=>t=>{const s=e.task(t);return s&&s.url}},mutations:{create(t,{name:e,url:s,data:a}){Vue.set(t,e,{isLoading:!1,data:a})},setLoading(t,{name:e,status:s}){Vue.set(t[e],"isLoading",s)}},actions:{loadStatuses:({state:t,commit:e,dispatch:s},{name:a,types:n,url:i})=>new Promise(t=>{e("setLoading",{name:a,status:!0}),AWEMA.ajax({types:n},i,"post").then(t=>{t.success&&AWEMA._store.commit("setData",{param:"taskStatuses",data:t.data})}).finally(()=>{e("setLoading",{name:a,status:!1}),t()})})},namespaced:!0};const o={name:"task",version:"1.0.0",install(t){Vue.use(n),t._store.registerModule("task",r),t.lang=i}};window&&"AWEMA"in window?AWEMA.use(o):(window.__awema_plugins_stack__=window.__awema_plugins_stack__||[],window.__awema_plugins_stack__.push(o))}();
